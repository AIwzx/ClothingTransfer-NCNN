#pragma once

#include "net.h"
#include <opencv2/opencv.hpp>
#include <algorithm>
#include <vector>
#include <iostream>
#include <math.h>

class OpenPose
{
public:
	OpenPose();
	~OpenPose();

	std::vector<cv::Mat> call(cv::Mat rgb);

private:
	std::vector<float> linspace(int start, int end, int num);
	bool findValue(const cv::Mat& mat, double value);

private:
	double weight_raw[25] = { 4.461134277264880335e-05,1.600947658919775810e-04,5.141076058219727499e-04,1.477324778400406977e-03,3.798769940305482366e-03,8.740878047691292424e-03,1.799750019086055614e-02,3.315998842086741866e-02,5.467157824565406499e-02,8.065919989878699015e-02,1.064856940272446983e-01,1.257979834603106528e-01,1.329845385507837097e-01,1.257979834603106528e-01,1.064856940272446983e-01,8.065919989878699015e-02,5.467157824565406499e-02,3.315998842086741866e-02,1.799750019086055614e-02,8.740878047691292424e-03,3.798769940305482366e-03,1.477324778400406977e-03,5.141076058219727499e-04,1.600947658919775810e-04,4.461134277264880335e-05 };
	int limbSeq[19][2] = { {2, 3}, {2, 6}, {3, 4}, {4, 5}, {6, 7}, {7, 8}, {2, 9}, {9, 10}, {10, 11}, {2, 12}, {12, 13}, {13, 14}, {2, 1}, {1, 15}, {15, 17}, {1, 16}, {16, 18}, {3, 17}, {6, 18} };
	int mapIdx[19][2] = { {31, 32}, {39, 40}, {33, 34}, {35, 36}, {41, 42}, {43, 44}, {19, 20}, {21, 22}, {23, 24}, {25, 26}, {27, 28}, {29, 30}, {47, 48}, {49, 50}, {53, 54}, {51, 52}, {55, 56}, {37, 38}, {45, 46} };

	const float mean_vals[3] = { 128.f, 128.f, 128.f };
	const float norm_vals[3] = { 1.f / 256.f, 1.f / 256.f, 1.f / 256.f };

	ncnn::Net net;
};

